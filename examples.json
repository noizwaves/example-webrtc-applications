[
	{
		"title": "GoCV Receive",
		"link": "gocv-receive",
		"description": "gocv-receive is a simple application that shows how to receive media using Pion and then do motion detection with GoCV.",
		"type": "browser"
	},
	{
		"title": "ffmpeg CLI",
		"link": "ffmpeg-cli",
		"description": "Use ffmpeg cli for capturing desktop. Render in browser.",
		"type": "browser"
	},
	{
		"title": "Gstreamer Receive",
		"link": "gstreamer-receive",
		"description": "The gstreamer-receive example shows how to receive media from the browser and play it live. This example uses GStreamer for rendering.",
		"type": "browser"
	},
	{
		"title": "Gstreamer Send",
		"link": "gstreamer-send",
		"description": "Example gstreamer-send shows how to send video to your browser. This example uses GStreamer to process the video.",
		"type": "browser"
	},
	{
		"title": "WebSocket SFU",
		"link": "#",
		"description": "The Websocket SFU example demonstrates how to broadcast a video to multiple peers. This is similar to Minimal SFU, but all signaling is done via websockets like a more full featured application.",
		"type": "browser"
	},
	{
		"title": "GStreamer CLI",
		"link": "gstreamer-cli",
		"description": "Example use GStreamer cli make v4l2 camera device raw stream to Pion WebRTC video stream and alsa audio device raw stream to Pion WebRTC audio stream",
		"type": "browser"
	},
	{
		"title": "Save to WebM",
		"link": "save-to-webm",
		"description": "save-to-webm demonstrates how to save audio/video from your browser as a webm to the local disk.",
		"type": "browser"
	},
	{
		"title": "C DataChannels",
		"link": "#",
		"description": "C DataChannels demonstrates how to use CGo so you can add Pion to your existing C applications.",
		"type": "browser"
	},
	{
		"title": "Janus Gateway",
		"link": "#",
		"description": "Janus Gateway shows how to use the streaming and video-room plugins with Pion.",
		"type": "browser"
	}

]
